* {
    padding: 0;
    margin: 0;
    box-sizing: border-box; /* The padding and border are included in the width and height. */
}

body {
    height: 100vh; /* vh = 1% viewport height. */
    display: flex; /* To center vertically '.memory game' container. */
    background-color: #060AB2;
}

.memory-game {
    height: 70vh; /* The board always display in all screen (without vertical scrolling) */
    width: 70vh;
    margin: auto; /* To center horizantally '.memory game' container. */
    display: flex; /* Row distribution, for all elements same size. */
    flex-wrap: wrap; /* Whether the flexible items should wrap or not. */
    perspective: 1000px; /* Define how far the object is away from the user. */
    /*border: 2px solid aqua;*/
}

.memory-card {
    width: calc(25% - 10px); /* To avoid desborder size of '.memory-card' respect '.memory-game'. */
    height: calc(33.3333% - 10px); /* Same. */
    margin: 5px; /* Space between cards. */
    position: relative;
    transform: scale(1); /* Original size. */
    transform-style: preserve-3d; /* 3D effect. */
    transition: transform .5s;
    /*border: 2px solid aqua;*/
}

.memory-card:active { 
    transform: scale(.97); /* Reduce the size image to 97%. */
    transition: transform .2s; /* Soft transition. */
}

.memory-card.flip {
    transform: rotateY(180deg); /* When this class appears then it will be rotate in Y-axis, 180 degrees. */
}

.front-face, .back-face {
    width: 100%;
    height: 100%;
    padding: 20px;
    position: absolute; /* Put front-face over back-face. */
    border-radius: 5px;
    background-color: #1c7ccc;
    backface-visibility: hidden; /* backface (specially) of '.front-face' will hidde after rotation. */
    /*border: 2px solid deeppink;*/
}

.front-face {
    transform: rotateY(180deg); /* When is rotated, the frontface of '.back-face' will appear. */
}